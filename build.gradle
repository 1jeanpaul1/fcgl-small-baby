/*
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.9/userguide/tutorial_java_projects.html
 */

buildscript {
    ext {
        springBootVersion = '2.0.4.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
//        maven {
//            url "https://puglins.gradle.org/m2/"
//        }
    }

    //TODO: Need to add mysql dependency
    dependencies {
        'mysql:mysql-connector-java:8.0.12'
//        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//        classpath 'nu.studer:gradle-jooq-plugin:3.0.1'
//        classpath 'gradle.plugin.com.boxfuse.client:flyway-release:5.1.4'
    }
}


plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '2.0.4.RELEASE'
    id 'nu.studer.jooq' version '3.0.1'
    id 'org.flywaydb.flyway' version '5.1.4'//TODO: Not sure if this does the trick
}

apply plugin: 'idea'//IntelliJ
//Provides Maven-like dependency management functionality
apply plugin: 'io.spring.dependency-management'

// Define the main class for the application
group = 'com.fcgl'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

//bootJar {
//    basename = 'gs-accessing-data-mysql'
//    version = '0.1.0'
//}

// In this section you declare where to find the dependencies of your project
//repositories {
//    // Use jcenter for resolving your dependencies.
//    // You can declare any Maven/Ivy/file repository here.
//    jcenter()
//    mavenCentral()
//}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-jooq'

    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'org.flywaydb:flyway-core:5.1.4'

    implementation 'mysql:mysql-connector-java:8.0.12'//TODO: Not sure if this does the trick

    // Use JUnit 5 test framework
    testImplementation(
            'org.junit.jupiter:junit-jupiter-api:5.1.0'
    )
    testRuntimeOnly(
            'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    )
    // Mockito
    testImplementation "org.mockito:mockito-core:2.21.0"
}

jooq {
    jdbc {
        url 'jdbc:mysql://localhost:3306'
        driver 'com.mysql.jdbc.Driver'
        user ''//TODO insert user
        password ''//TODO insert password
    }
}




mainClassName = 'App'
